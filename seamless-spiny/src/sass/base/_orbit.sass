@use 'sass:math'
@use "sass:color"
@import "variables"
@import "animations"
@import "../abstracts/colors"
body
  display: grid
  place-content: center
  min-height: 100vh
  position: relative
.orbit
  position: relative
  .center-image
    z-index: 1
    width: $image-width
    height: $image-width
    position: absolute
    transform: translate(-50%, -50%)
    &::before
      content: ""
      width: $image-width
      aspect-ratio: 1/1
      background-color: #0e2e47
      position: absolute
      z-index: 2
      border-radius: 50px
      opacity: 1
      animation: $image-animation
    img
      position: absolute
      transition: opacity $image-opacity-transition-time ease-in
      width: $image-width
      aspect-ratio: 1 / 1
      &:last-child:hover
        opacity: 0
  ul
    position: absolute
    animation: $rotating-animation
    z-index: 2
    &:hover
      animation-play-state: paused
      --animation-state: paused
    li
      position: absolute
      display: grid
      place-content: center
      z-index: 2
      width: 15px
      opacity: 0
      aspect-ratio: 1/1
      @for $i from 1 to length($colors)
        &:nth-child(#{$i})
          --start-x-axis-offset: calc(#{math.round(math.sin($angle * $i) * -$radius / 5)} - 50%)
          --start-y-axis-offset: calc(#{math.round(math.cos($angle * $i) * -$radius / 5)} - 50%)
          --offset-x-axis-offset: calc(#{math.round(math.sin($angle * $i) * -$radius * 1.2)} - 50%)
          --offset-y-axis-offset: calc(#{math.round(math.cos($angle * $i) * -$radius * 1.2)} - 50%)
          --x-axis-offset: calc(#{math.round(math.sin($angle * $i) * -$radius)} - 50%)
          --y-axis-offset: calc(#{math.round(math.cos($angle * $i) * -$radius)} - 50%)

          transform: translate(var(--start-x-axis-offset), var(--start-y-axis-offset))
          $color: nth($colors, $i)
          --color: #{$color}
          --color-dark: #{color.adjust($color, $lightness: -40%)}
          animation: $initialization_animation #{$i * $throbbing-delay}
          div
            @if(random(100) < 50)
              animation: $throbbing-animation #{$i * $throbbing-delay + $initialization_animation-timer + random(300ms)}
            @else
              animation: $throbbing-animation #{$i * $throbbing-delay + $initialization_animation-timer - random(300ms)}
            img
              animation: $icon-reveal-animation #{$i * $throbbing-delay + $initialization_animation-timer / 2}, $reverse-rotating-animation-no-delay #{$initialization_animation-timer}
              animation-play-state: var(--animation-state, running)
      div
        z-index: 1
        background-color: var(--color)
        display: grid
        place-content: center
        border-radius: 50%
        position: relative
        transition: background-color ease-in-out $list-item-transition-time
        color: white
        width: inherit
        aspect-ratio: 1/1
        &:hover
          animation-play-state: paused
        img
          opacity: 0
          transition: opacity ease-in-out $list-item-transition-time
        &:hover
          background-color: var(--color-dark)
          img
            opacity: 0!important
          &:before
            opacity: 1
        &::before
          transition: opacity $list-item-transition-time ease-in-out
          content: attr(text)
          position: absolute
          text-align: center
          width: 100px
          height: 100px
          left: 0
          top: 0
          display: grid
          place-content: center
          animation: $reverse-rotating-animation
          opacity: 0
          animation-play-state: var(--animation-state, running)